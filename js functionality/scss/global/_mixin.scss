@mixin box-shadow($shadows...) {
	-webkit-box-shadow: $shadows;
	box-shadow: $shadows;
}

@mixin transition($transition...) {
	-o-transition: $transition;
	-webkit-transition: $transition;
	transition: $transition;
}

@mixin linear-gradient($gradient...) {
	background: -o-linear-gradient($gradient);
	background: -webkit-linear-gradient($gradient);
	background: linear-gradient($gradient);
}

@mixin radial-gradient($radial-gradient...) {
	background: -o-radial-gradient($radial-gradient);
	background: -webkit-radial-gradient($radial-gradient);
	background: radial-gradient($radial-gradient);
}

@mixin clip-path($circle) {
	-webkit-clip-path: $circle;
	clip-path: $circle;
}

@mixin filter($blur) {
	-webkit-filter: $blur;
	filter: $blur;
}

@mixin transform($origin) {
	-ms-transform: $origin;
	-webkit-transform: $origin;
	transform: $origin;
}

@mixin transform-origin($origin) {
	-webkit-transform-origin: $origin;
	-ms-transform-origin: $origin;
	transform-origin: $origin;
}

@mixin backdrop-filter($origin) {
-webkit-backdrop-filter:$origin;
backdrop-filter: $origin;
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin animation($str...) {
	-webkit-animation: #{$str};
	animation: #{$str};
}

@mixin animation-delay($delay) {
	-webkit-animation-delay: $delay;
	animation-delay: $delay;
}

@mixin placeholder {
	&::-moz-placeholder {
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
	&::-ms-input-placeholder {
		@content;
	}
	&::-webkit-input-placeholder {
		@content;
	}
	&::placeholder {
		@content;
	}
}

// flex properties
@mixin flex {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}

@mixin inline-flex {
	display: -webkit-inline-box;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

@mixin flex-grow-1 {
	-webkit-box-flex: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
}

@mixin flex1 {
	-webkit-box-flex: 1;
	-ms-flex: 1;
	flex: 1;
}

@mixin col-auto {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    width: auto;
}

@mixin  col {
    -webkit-box-flex: 1;
        -ms-flex: 1 0 0%;
            flex: 1 0 0%;
}

@mixin flex-none {
	-webkit-box-flex: 0;
	-ms-flex: none;
	flex: none;
}

@mixin flex-wrap {
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}

@mixin flex-no-wrap {
	-ms-flex-wrap: nowrap;
	flex-wrap: nowrap;
}

@mixin justify-space-between {
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}

@mixin justify-center {
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
}

@mixin justify-flex-start {
	-webkit-box-pack: start;
	-ms-flex-pack: start;
	justify-content: flex-start;
}

@mixin justify-flex-end {
	-webkit-box-pack: end;
	-ms-flex-pack: end;
	justify-content: flex-end;
}

@mixin justify-center-unset {
	-webkit-box-pack: unset;
	-ms-flex-pack: unset;
	justify-content: unset;
}

@mixin justify-space-around {
	-ms-flex-pack: distribute;
	justify-content: space-around;
}

@mixin justify-space-evenly {
	-webkit-box-pack: space-evenly;
	-ms-flex-pack: space-evenly;
	justify-content: space-evenly;
}

@mixin align-center {
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}

@mixin align-baseline {
	-webkit-box-align: baseline;
	-ms-flex-align: baseline;
	align-items: baseline;
}

@mixin align-start {
	-webkit-box-align: start;
	-ms-flex-align: start;
	align-items: flex-start;
}

@mixin align-end {
	-webkit-box-align: end;
	-ms-flex-align: end;
	align-items: flex-end;
}

@mixin align-stretch {
	-webkit-box-align: stretch;
	-ms-flex-align: stretch;
	align-items: stretch;
}

@mixin align-self-start {
	-ms-flex-item-align: start;
	align-self: flex-start;
}

@mixin align-self-end {
	-ms-flex-item-align: end;
	align-self: flex-end;
}

@mixin align-self-center {
	-ms-flex-item-align: center;
	align-self: center;
}

@mixin align-content-center {
	-ms-flex-line-pack: center;
	align-content: center;
}

@mixin flex-flow-column-wrap {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-flow: column wrap;
	flex-flow: column wrap;
}

@mixin flex-direction-column {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
}

@mixin flex-column-reverse {
	-webkit-box-orient: vertical;
	-webkit-box-direction: reverse;
	-ms-flex-direction: column-reverse;
	flex-direction: column-reverse;
}

@mixin flex-direction-row {
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-ms-flex-direction: row;
	flex-direction: row;
}

@mixin flex-row-reverse {
	-webkit-box-orient: horizontal;
	-webkit-box-direction: reverse;
	-ms-flex-direction: row-reverse;
	flex-direction: row-reverse;
}

// Grid properties

@mixin grid {
	display: -ms-grid;
	display: grid;
}

@mixin unselectable {
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

@mixin scrollbar {
	&::-webkit-scrollbar-track {
		background: none;
		box-shadow: none;
		margin: 10px 0;
	}

	&::-webkit-scrollbar {
		width: 4px;
		height: 4px;
		background: rgba($-secondary, 0.1);
	}

	&::-webkit-scrollbar-thumb {
		border-right: 4px solid rgba($-secondary, 0.3);
		border-bottom: 4px solid rgba($-secondary, 0.3);
		border-radius: 4px;
		background: none;
		margin: 10px 0;
	}
}

@mixin fontRegular {
	font-family: 'FTRegolaNeueRegular', Arial, sans-serif;
	font-weight: normal;
}

@mixin fontBold {
	font-family: 'FTRegolaNeueBold', Arial, sans-serif;
	font-weight: normal;
}

@mixin fontSemiBold {
	font-family: 'FTRegolaNeueMedium', Arial, sans-serif;
	font-weight: normal;
}

@mixin background-image {
	background-position: center;
	background-repeat: no-repeat;
	background-size: contain;
}

// Fluid Fonts
@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);
  
	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
	  & {
		font-size: $min-font-size;
		@media screen and (min-width: $min-vw) {
		  font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
		}
		@media screen and (min-width: $max-vw) {
		  font-size: $max-font-size;
		}
	  }
	}
  }